- name: Deploy Dispatcharr Database (PostgreSQL)
  hosts: master
  gather_facts: false
  vars:
    desired_state: "present"
  tasks:
    - name: Create PostgreSQL PVC
      kubernetes.core.k8s:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        state: "{{ desired_state }}"
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            namespace: livetv
            name: postgres-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 5Gi

    - name: Deploy PostgreSQL
      kubernetes.core.k8s:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        state: "{{ desired_state }}"
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: dispatcharr-db
            namespace: livetv
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: dispatcharr-db
            template:
              metadata:
                labels:
                  app: dispatcharr-db
              spec:
                containers:
                  - name: postgres
                    image: postgres:14
                    env:
                      - name: PGDATA
                        value: /var/lib/postgresql/data/pgdata
                      - name: POSTGRES_DB
                        value: "dispatcharr"
                      - name: POSTGRES_USER
                        value: "dispatch"
                      - name: POSTGRES_PASSWORD
                        value: "secret"
                    volumeMounts:
                      - name: postgres-data
                        mountPath: /var/lib/postgresql/data
                volumes:
                  - name: postgres-data
                    persistentVolumeClaim:
                      claimName: postgres-data

    - name: Create PostgreSQL Service
      kubernetes.core.k8s:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        state: "{{ desired_state }}"
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: dispatcharr-db
            namespace: livetv
          spec:
            ports:
              - port: 5432
                targetPort: 5432
            selector:
              app: dispatcharr-db
